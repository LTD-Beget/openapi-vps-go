/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// ConfiguratorGetCalculationResponseSuccess struct for ConfiguratorGetCalculationResponseSuccess
type ConfiguratorGetCalculationResponseSuccess struct {
	Settings *ConfiguratorConfiguratorSettings `json:"settings,omitempty"`
	Params *StructuresConfigurationParams `json:"params,omitempty"`
	PriceDay *float64 `json:"price_day,omitempty"`
	PriceMonth *float64 `json:"price_month,omitempty"`
}

// NewConfiguratorGetCalculationResponseSuccess instantiates a new ConfiguratorGetCalculationResponseSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfiguratorGetCalculationResponseSuccess() *ConfiguratorGetCalculationResponseSuccess {
	this := ConfiguratorGetCalculationResponseSuccess{}
	return &this
}

// NewConfiguratorGetCalculationResponseSuccessWithDefaults instantiates a new ConfiguratorGetCalculationResponseSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfiguratorGetCalculationResponseSuccessWithDefaults() *ConfiguratorGetCalculationResponseSuccess {
	this := ConfiguratorGetCalculationResponseSuccess{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ConfiguratorGetCalculationResponseSuccess) GetSettings() ConfiguratorConfiguratorSettings {
	if o == nil || isNil(o.Settings) {
		var ret ConfiguratorConfiguratorSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) GetSettingsOk() (*ConfiguratorConfiguratorSettings, bool) {
	if o == nil || isNil(o.Settings) {
    return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) HasSettings() bool {
	if o != nil && !isNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given ConfiguratorConfiguratorSettings and assigns it to the Settings field.
func (o *ConfiguratorGetCalculationResponseSuccess) SetSettings(v ConfiguratorConfiguratorSettings) {
	o.Settings = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ConfiguratorGetCalculationResponseSuccess) GetParams() StructuresConfigurationParams {
	if o == nil || isNil(o.Params) {
		var ret StructuresConfigurationParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) GetParamsOk() (*StructuresConfigurationParams, bool) {
	if o == nil || isNil(o.Params) {
    return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) HasParams() bool {
	if o != nil && !isNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given StructuresConfigurationParams and assigns it to the Params field.
func (o *ConfiguratorGetCalculationResponseSuccess) SetParams(v StructuresConfigurationParams) {
	o.Params = &v
}

// GetPriceDay returns the PriceDay field value if set, zero value otherwise.
func (o *ConfiguratorGetCalculationResponseSuccess) GetPriceDay() float64 {
	if o == nil || isNil(o.PriceDay) {
		var ret float64
		return ret
	}
	return *o.PriceDay
}

// GetPriceDayOk returns a tuple with the PriceDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) GetPriceDayOk() (*float64, bool) {
	if o == nil || isNil(o.PriceDay) {
    return nil, false
	}
	return o.PriceDay, true
}

// HasPriceDay returns a boolean if a field has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) HasPriceDay() bool {
	if o != nil && !isNil(o.PriceDay) {
		return true
	}

	return false
}

// SetPriceDay gets a reference to the given float64 and assigns it to the PriceDay field.
func (o *ConfiguratorGetCalculationResponseSuccess) SetPriceDay(v float64) {
	o.PriceDay = &v
}

// GetPriceMonth returns the PriceMonth field value if set, zero value otherwise.
func (o *ConfiguratorGetCalculationResponseSuccess) GetPriceMonth() float64 {
	if o == nil || isNil(o.PriceMonth) {
		var ret float64
		return ret
	}
	return *o.PriceMonth
}

// GetPriceMonthOk returns a tuple with the PriceMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) GetPriceMonthOk() (*float64, bool) {
	if o == nil || isNil(o.PriceMonth) {
    return nil, false
	}
	return o.PriceMonth, true
}

// HasPriceMonth returns a boolean if a field has been set.
func (o *ConfiguratorGetCalculationResponseSuccess) HasPriceMonth() bool {
	if o != nil && !isNil(o.PriceMonth) {
		return true
	}

	return false
}

// SetPriceMonth gets a reference to the given float64 and assigns it to the PriceMonth field.
func (o *ConfiguratorGetCalculationResponseSuccess) SetPriceMonth(v float64) {
	o.PriceMonth = &v
}

func (o ConfiguratorGetCalculationResponseSuccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !isNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !isNil(o.PriceDay) {
		toSerialize["price_day"] = o.PriceDay
	}
	if !isNil(o.PriceMonth) {
		toSerialize["price_month"] = o.PriceMonth
	}
	return json.Marshal(toSerialize)
}

type NullableConfiguratorGetCalculationResponseSuccess struct {
	value *ConfiguratorGetCalculationResponseSuccess
	isSet bool
}

func (v NullableConfiguratorGetCalculationResponseSuccess) Get() *ConfiguratorGetCalculationResponseSuccess {
	return v.value
}

func (v *NullableConfiguratorGetCalculationResponseSuccess) Set(val *ConfiguratorGetCalculationResponseSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableConfiguratorGetCalculationResponseSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableConfiguratorGetCalculationResponseSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfiguratorGetCalculationResponseSuccess(val *ConfiguratorGetCalculationResponseSuccess) *NullableConfiguratorGetCalculationResponseSuccess {
	return &NullableConfiguratorGetCalculationResponseSuccess{value: val, isSet: true}
}

func (v NullableConfiguratorGetCalculationResponseSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfiguratorGetCalculationResponseSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


