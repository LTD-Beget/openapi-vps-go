/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// SoftwareLicenseChangeLicensePlanRequest struct for SoftwareLicenseChangeLicensePlanRequest
type SoftwareLicenseChangeLicensePlanRequest struct {
	VpsId *string `json:"vps_id,omitempty"`
	LicenseId *int32 `json:"license_id,omitempty"`
	NewLicenseId *int32 `json:"new_license_id,omitempty"`
}

// NewSoftwareLicenseChangeLicensePlanRequest instantiates a new SoftwareLicenseChangeLicensePlanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoftwareLicenseChangeLicensePlanRequest() *SoftwareLicenseChangeLicensePlanRequest {
	this := SoftwareLicenseChangeLicensePlanRequest{}
	return &this
}

// NewSoftwareLicenseChangeLicensePlanRequestWithDefaults instantiates a new SoftwareLicenseChangeLicensePlanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoftwareLicenseChangeLicensePlanRequestWithDefaults() *SoftwareLicenseChangeLicensePlanRequest {
	this := SoftwareLicenseChangeLicensePlanRequest{}
	return &this
}

// GetVpsId returns the VpsId field value if set, zero value otherwise.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetVpsId() string {
	if o == nil || isNil(o.VpsId) {
		var ret string
		return ret
	}
	return *o.VpsId
}

// GetVpsIdOk returns a tuple with the VpsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetVpsIdOk() (*string, bool) {
	if o == nil || isNil(o.VpsId) {
    return nil, false
	}
	return o.VpsId, true
}

// HasVpsId returns a boolean if a field has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) HasVpsId() bool {
	if o != nil && !isNil(o.VpsId) {
		return true
	}

	return false
}

// SetVpsId gets a reference to the given string and assigns it to the VpsId field.
func (o *SoftwareLicenseChangeLicensePlanRequest) SetVpsId(v string) {
	o.VpsId = &v
}

// GetLicenseId returns the LicenseId field value if set, zero value otherwise.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetLicenseId() int32 {
	if o == nil || isNil(o.LicenseId) {
		var ret int32
		return ret
	}
	return *o.LicenseId
}

// GetLicenseIdOk returns a tuple with the LicenseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetLicenseIdOk() (*int32, bool) {
	if o == nil || isNil(o.LicenseId) {
    return nil, false
	}
	return o.LicenseId, true
}

// HasLicenseId returns a boolean if a field has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) HasLicenseId() bool {
	if o != nil && !isNil(o.LicenseId) {
		return true
	}

	return false
}

// SetLicenseId gets a reference to the given int32 and assigns it to the LicenseId field.
func (o *SoftwareLicenseChangeLicensePlanRequest) SetLicenseId(v int32) {
	o.LicenseId = &v
}

// GetNewLicenseId returns the NewLicenseId field value if set, zero value otherwise.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetNewLicenseId() int32 {
	if o == nil || isNil(o.NewLicenseId) {
		var ret int32
		return ret
	}
	return *o.NewLicenseId
}

// GetNewLicenseIdOk returns a tuple with the NewLicenseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) GetNewLicenseIdOk() (*int32, bool) {
	if o == nil || isNil(o.NewLicenseId) {
    return nil, false
	}
	return o.NewLicenseId, true
}

// HasNewLicenseId returns a boolean if a field has been set.
func (o *SoftwareLicenseChangeLicensePlanRequest) HasNewLicenseId() bool {
	if o != nil && !isNil(o.NewLicenseId) {
		return true
	}

	return false
}

// SetNewLicenseId gets a reference to the given int32 and assigns it to the NewLicenseId field.
func (o *SoftwareLicenseChangeLicensePlanRequest) SetNewLicenseId(v int32) {
	o.NewLicenseId = &v
}

func (o SoftwareLicenseChangeLicensePlanRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VpsId) {
		toSerialize["vps_id"] = o.VpsId
	}
	if !isNil(o.LicenseId) {
		toSerialize["license_id"] = o.LicenseId
	}
	if !isNil(o.NewLicenseId) {
		toSerialize["new_license_id"] = o.NewLicenseId
	}
	return json.Marshal(toSerialize)
}

type NullableSoftwareLicenseChangeLicensePlanRequest struct {
	value *SoftwareLicenseChangeLicensePlanRequest
	isSet bool
}

func (v NullableSoftwareLicenseChangeLicensePlanRequest) Get() *SoftwareLicenseChangeLicensePlanRequest {
	return v.value
}

func (v *NullableSoftwareLicenseChangeLicensePlanRequest) Set(val *SoftwareLicenseChangeLicensePlanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSoftwareLicenseChangeLicensePlanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSoftwareLicenseChangeLicensePlanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoftwareLicenseChangeLicensePlanRequest(val *SoftwareLicenseChangeLicensePlanRequest) *NullableSoftwareLicenseChangeLicensePlanRequest {
	return &NullableSoftwareLicenseChangeLicensePlanRequest{value: val, isSet: true}
}

func (v NullableSoftwareLicenseChangeLicensePlanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoftwareLicenseChangeLicensePlanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


