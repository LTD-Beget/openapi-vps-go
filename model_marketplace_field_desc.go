/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// MarketplaceFieldDesc struct for MarketplaceFieldDesc
type MarketplaceFieldDesc struct {
	PasswordField *MarketplacePasswordField `json:"password_field,omitempty"`
	DomainField *MarketplaceDomainField `json:"domain_field,omitempty"`
	TextField *MarketplaceTextField `json:"text_field,omitempty"`
	EmailField *MarketplaceEmailField `json:"email_field,omitempty"`
}

// NewMarketplaceFieldDesc instantiates a new MarketplaceFieldDesc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceFieldDesc() *MarketplaceFieldDesc {
	this := MarketplaceFieldDesc{}
	return &this
}

// NewMarketplaceFieldDescWithDefaults instantiates a new MarketplaceFieldDesc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceFieldDescWithDefaults() *MarketplaceFieldDesc {
	this := MarketplaceFieldDesc{}
	return &this
}

// GetPasswordField returns the PasswordField field value if set, zero value otherwise.
func (o *MarketplaceFieldDesc) GetPasswordField() MarketplacePasswordField {
	if o == nil || isNil(o.PasswordField) {
		var ret MarketplacePasswordField
		return ret
	}
	return *o.PasswordField
}

// GetPasswordFieldOk returns a tuple with the PasswordField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceFieldDesc) GetPasswordFieldOk() (*MarketplacePasswordField, bool) {
	if o == nil || isNil(o.PasswordField) {
    return nil, false
	}
	return o.PasswordField, true
}

// HasPasswordField returns a boolean if a field has been set.
func (o *MarketplaceFieldDesc) HasPasswordField() bool {
	if o != nil && !isNil(o.PasswordField) {
		return true
	}

	return false
}

// SetPasswordField gets a reference to the given MarketplacePasswordField and assigns it to the PasswordField field.
func (o *MarketplaceFieldDesc) SetPasswordField(v MarketplacePasswordField) {
	o.PasswordField = &v
}

// GetDomainField returns the DomainField field value if set, zero value otherwise.
func (o *MarketplaceFieldDesc) GetDomainField() MarketplaceDomainField {
	if o == nil || isNil(o.DomainField) {
		var ret MarketplaceDomainField
		return ret
	}
	return *o.DomainField
}

// GetDomainFieldOk returns a tuple with the DomainField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceFieldDesc) GetDomainFieldOk() (*MarketplaceDomainField, bool) {
	if o == nil || isNil(o.DomainField) {
    return nil, false
	}
	return o.DomainField, true
}

// HasDomainField returns a boolean if a field has been set.
func (o *MarketplaceFieldDesc) HasDomainField() bool {
	if o != nil && !isNil(o.DomainField) {
		return true
	}

	return false
}

// SetDomainField gets a reference to the given MarketplaceDomainField and assigns it to the DomainField field.
func (o *MarketplaceFieldDesc) SetDomainField(v MarketplaceDomainField) {
	o.DomainField = &v
}

// GetTextField returns the TextField field value if set, zero value otherwise.
func (o *MarketplaceFieldDesc) GetTextField() MarketplaceTextField {
	if o == nil || isNil(o.TextField) {
		var ret MarketplaceTextField
		return ret
	}
	return *o.TextField
}

// GetTextFieldOk returns a tuple with the TextField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceFieldDesc) GetTextFieldOk() (*MarketplaceTextField, bool) {
	if o == nil || isNil(o.TextField) {
    return nil, false
	}
	return o.TextField, true
}

// HasTextField returns a boolean if a field has been set.
func (o *MarketplaceFieldDesc) HasTextField() bool {
	if o != nil && !isNil(o.TextField) {
		return true
	}

	return false
}

// SetTextField gets a reference to the given MarketplaceTextField and assigns it to the TextField field.
func (o *MarketplaceFieldDesc) SetTextField(v MarketplaceTextField) {
	o.TextField = &v
}

// GetEmailField returns the EmailField field value if set, zero value otherwise.
func (o *MarketplaceFieldDesc) GetEmailField() MarketplaceEmailField {
	if o == nil || isNil(o.EmailField) {
		var ret MarketplaceEmailField
		return ret
	}
	return *o.EmailField
}

// GetEmailFieldOk returns a tuple with the EmailField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceFieldDesc) GetEmailFieldOk() (*MarketplaceEmailField, bool) {
	if o == nil || isNil(o.EmailField) {
    return nil, false
	}
	return o.EmailField, true
}

// HasEmailField returns a boolean if a field has been set.
func (o *MarketplaceFieldDesc) HasEmailField() bool {
	if o != nil && !isNil(o.EmailField) {
		return true
	}

	return false
}

// SetEmailField gets a reference to the given MarketplaceEmailField and assigns it to the EmailField field.
func (o *MarketplaceFieldDesc) SetEmailField(v MarketplaceEmailField) {
	o.EmailField = &v
}

func (o MarketplaceFieldDesc) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PasswordField) {
		toSerialize["password_field"] = o.PasswordField
	}
	if !isNil(o.DomainField) {
		toSerialize["domain_field"] = o.DomainField
	}
	if !isNil(o.TextField) {
		toSerialize["text_field"] = o.TextField
	}
	if !isNil(o.EmailField) {
		toSerialize["email_field"] = o.EmailField
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplaceFieldDesc struct {
	value *MarketplaceFieldDesc
	isSet bool
}

func (v NullableMarketplaceFieldDesc) Get() *MarketplaceFieldDesc {
	return v.value
}

func (v *NullableMarketplaceFieldDesc) Set(val *MarketplaceFieldDesc) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceFieldDesc) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceFieldDesc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceFieldDesc(val *MarketplaceFieldDesc) *NullableMarketplaceFieldDesc {
	return &NullableMarketplaceFieldDesc{value: val, isSet: true}
}

func (v NullableMarketplaceFieldDesc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceFieldDesc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


