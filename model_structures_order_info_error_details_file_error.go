/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StructuresOrderInfoErrorDetailsFileError struct for StructuresOrderInfoErrorDetailsFileError
type StructuresOrderInfoErrorDetailsFileError struct {
	Error *map[string]string `json:"error,omitempty"`
}

// NewStructuresOrderInfoErrorDetailsFileError instantiates a new StructuresOrderInfoErrorDetailsFileError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresOrderInfoErrorDetailsFileError() *StructuresOrderInfoErrorDetailsFileError {
	this := StructuresOrderInfoErrorDetailsFileError{}
	return &this
}

// NewStructuresOrderInfoErrorDetailsFileErrorWithDefaults instantiates a new StructuresOrderInfoErrorDetailsFileError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresOrderInfoErrorDetailsFileErrorWithDefaults() *StructuresOrderInfoErrorDetailsFileError {
	this := StructuresOrderInfoErrorDetailsFileError{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *StructuresOrderInfoErrorDetailsFileError) GetError() map[string]string {
	if o == nil || isNil(o.Error) {
		var ret map[string]string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresOrderInfoErrorDetailsFileError) GetErrorOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *StructuresOrderInfoErrorDetailsFileError) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given map[string]string and assigns it to the Error field.
func (o *StructuresOrderInfoErrorDetailsFileError) SetError(v map[string]string) {
	o.Error = &v
}

func (o StructuresOrderInfoErrorDetailsFileError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresOrderInfoErrorDetailsFileError struct {
	value *StructuresOrderInfoErrorDetailsFileError
	isSet bool
}

func (v NullableStructuresOrderInfoErrorDetailsFileError) Get() *StructuresOrderInfoErrorDetailsFileError {
	return v.value
}

func (v *NullableStructuresOrderInfoErrorDetailsFileError) Set(val *StructuresOrderInfoErrorDetailsFileError) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresOrderInfoErrorDetailsFileError) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresOrderInfoErrorDetailsFileError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresOrderInfoErrorDetailsFileError(val *StructuresOrderInfoErrorDetailsFileError) *NullableStructuresOrderInfoErrorDetailsFileError {
	return &NullableStructuresOrderInfoErrorDetailsFileError{value: val, isSet: true}
}

func (v NullableStructuresOrderInfoErrorDetailsFileError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresOrderInfoErrorDetailsFileError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


