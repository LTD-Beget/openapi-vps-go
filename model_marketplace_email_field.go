/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// MarketplaceEmailField struct for MarketplaceEmailField
type MarketplaceEmailField struct {
	Common *MarketplaceFieldCommon `json:"common,omitempty"`
}

// NewMarketplaceEmailField instantiates a new MarketplaceEmailField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceEmailField() *MarketplaceEmailField {
	this := MarketplaceEmailField{}
	return &this
}

// NewMarketplaceEmailFieldWithDefaults instantiates a new MarketplaceEmailField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceEmailFieldWithDefaults() *MarketplaceEmailField {
	this := MarketplaceEmailField{}
	return &this
}

// GetCommon returns the Common field value if set, zero value otherwise.
func (o *MarketplaceEmailField) GetCommon() MarketplaceFieldCommon {
	if o == nil || isNil(o.Common) {
		var ret MarketplaceFieldCommon
		return ret
	}
	return *o.Common
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceEmailField) GetCommonOk() (*MarketplaceFieldCommon, bool) {
	if o == nil || isNil(o.Common) {
    return nil, false
	}
	return o.Common, true
}

// HasCommon returns a boolean if a field has been set.
func (o *MarketplaceEmailField) HasCommon() bool {
	if o != nil && !isNil(o.Common) {
		return true
	}

	return false
}

// SetCommon gets a reference to the given MarketplaceFieldCommon and assigns it to the Common field.
func (o *MarketplaceEmailField) SetCommon(v MarketplaceFieldCommon) {
	o.Common = &v
}

func (o MarketplaceEmailField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Common) {
		toSerialize["common"] = o.Common
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplaceEmailField struct {
	value *MarketplaceEmailField
	isSet bool
}

func (v NullableMarketplaceEmailField) Get() *MarketplaceEmailField {
	return v.value
}

func (v *NullableMarketplaceEmailField) Set(val *MarketplaceEmailField) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceEmailField) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceEmailField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceEmailField(val *MarketplaceEmailField) *NullableMarketplaceEmailField {
	return &NullableMarketplaceEmailField{value: val, isSet: true}
}

func (v NullableMarketplaceEmailField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceEmailField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


