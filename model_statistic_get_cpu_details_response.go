/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StatisticGetCpuDetailsResponse struct for StatisticGetCpuDetailsResponse
type StatisticGetCpuDetailsResponse struct {
	Date []string `json:"date,omitempty"`
	User []float64 `json:"user,omitempty"`
	Nice []float64 `json:"nice,omitempty"`
	System []float64 `json:"system,omitempty"`
	Idle []float64 `json:"idle,omitempty"`
	Iowait []float64 `json:"iowait,omitempty"`
	Irq []float64 `json:"irq,omitempty"`
	Softirq []float64 `json:"softirq,omitempty"`
}

// NewStatisticGetCpuDetailsResponse instantiates a new StatisticGetCpuDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatisticGetCpuDetailsResponse() *StatisticGetCpuDetailsResponse {
	this := StatisticGetCpuDetailsResponse{}
	return &this
}

// NewStatisticGetCpuDetailsResponseWithDefaults instantiates a new StatisticGetCpuDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatisticGetCpuDetailsResponseWithDefaults() *StatisticGetCpuDetailsResponse {
	this := StatisticGetCpuDetailsResponse{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetDate() []string {
	if o == nil || isNil(o.Date) {
		var ret []string
		return ret
	}
	return o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetDateOk() ([]string, bool) {
	if o == nil || isNil(o.Date) {
    return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasDate() bool {
	if o != nil && !isNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given []string and assigns it to the Date field.
func (o *StatisticGetCpuDetailsResponse) SetDate(v []string) {
	o.Date = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetUser() []float64 {
	if o == nil || isNil(o.User) {
		var ret []float64
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetUserOk() ([]float64, bool) {
	if o == nil || isNil(o.User) {
    return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given []float64 and assigns it to the User field.
func (o *StatisticGetCpuDetailsResponse) SetUser(v []float64) {
	o.User = v
}

// GetNice returns the Nice field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetNice() []float64 {
	if o == nil || isNil(o.Nice) {
		var ret []float64
		return ret
	}
	return o.Nice
}

// GetNiceOk returns a tuple with the Nice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetNiceOk() ([]float64, bool) {
	if o == nil || isNil(o.Nice) {
    return nil, false
	}
	return o.Nice, true
}

// HasNice returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasNice() bool {
	if o != nil && !isNil(o.Nice) {
		return true
	}

	return false
}

// SetNice gets a reference to the given []float64 and assigns it to the Nice field.
func (o *StatisticGetCpuDetailsResponse) SetNice(v []float64) {
	o.Nice = v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetSystem() []float64 {
	if o == nil || isNil(o.System) {
		var ret []float64
		return ret
	}
	return o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetSystemOk() ([]float64, bool) {
	if o == nil || isNil(o.System) {
    return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasSystem() bool {
	if o != nil && !isNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given []float64 and assigns it to the System field.
func (o *StatisticGetCpuDetailsResponse) SetSystem(v []float64) {
	o.System = v
}

// GetIdle returns the Idle field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetIdle() []float64 {
	if o == nil || isNil(o.Idle) {
		var ret []float64
		return ret
	}
	return o.Idle
}

// GetIdleOk returns a tuple with the Idle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetIdleOk() ([]float64, bool) {
	if o == nil || isNil(o.Idle) {
    return nil, false
	}
	return o.Idle, true
}

// HasIdle returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasIdle() bool {
	if o != nil && !isNil(o.Idle) {
		return true
	}

	return false
}

// SetIdle gets a reference to the given []float64 and assigns it to the Idle field.
func (o *StatisticGetCpuDetailsResponse) SetIdle(v []float64) {
	o.Idle = v
}

// GetIowait returns the Iowait field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetIowait() []float64 {
	if o == nil || isNil(o.Iowait) {
		var ret []float64
		return ret
	}
	return o.Iowait
}

// GetIowaitOk returns a tuple with the Iowait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetIowaitOk() ([]float64, bool) {
	if o == nil || isNil(o.Iowait) {
    return nil, false
	}
	return o.Iowait, true
}

// HasIowait returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasIowait() bool {
	if o != nil && !isNil(o.Iowait) {
		return true
	}

	return false
}

// SetIowait gets a reference to the given []float64 and assigns it to the Iowait field.
func (o *StatisticGetCpuDetailsResponse) SetIowait(v []float64) {
	o.Iowait = v
}

// GetIrq returns the Irq field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetIrq() []float64 {
	if o == nil || isNil(o.Irq) {
		var ret []float64
		return ret
	}
	return o.Irq
}

// GetIrqOk returns a tuple with the Irq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetIrqOk() ([]float64, bool) {
	if o == nil || isNil(o.Irq) {
    return nil, false
	}
	return o.Irq, true
}

// HasIrq returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasIrq() bool {
	if o != nil && !isNil(o.Irq) {
		return true
	}

	return false
}

// SetIrq gets a reference to the given []float64 and assigns it to the Irq field.
func (o *StatisticGetCpuDetailsResponse) SetIrq(v []float64) {
	o.Irq = v
}

// GetSoftirq returns the Softirq field value if set, zero value otherwise.
func (o *StatisticGetCpuDetailsResponse) GetSoftirq() []float64 {
	if o == nil || isNil(o.Softirq) {
		var ret []float64
		return ret
	}
	return o.Softirq
}

// GetSoftirqOk returns a tuple with the Softirq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticGetCpuDetailsResponse) GetSoftirqOk() ([]float64, bool) {
	if o == nil || isNil(o.Softirq) {
    return nil, false
	}
	return o.Softirq, true
}

// HasSoftirq returns a boolean if a field has been set.
func (o *StatisticGetCpuDetailsResponse) HasSoftirq() bool {
	if o != nil && !isNil(o.Softirq) {
		return true
	}

	return false
}

// SetSoftirq gets a reference to the given []float64 and assigns it to the Softirq field.
func (o *StatisticGetCpuDetailsResponse) SetSoftirq(v []float64) {
	o.Softirq = v
}

func (o StatisticGetCpuDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !isNil(o.Nice) {
		toSerialize["nice"] = o.Nice
	}
	if !isNil(o.System) {
		toSerialize["system"] = o.System
	}
	if !isNil(o.Idle) {
		toSerialize["idle"] = o.Idle
	}
	if !isNil(o.Iowait) {
		toSerialize["iowait"] = o.Iowait
	}
	if !isNil(o.Irq) {
		toSerialize["irq"] = o.Irq
	}
	if !isNil(o.Softirq) {
		toSerialize["softirq"] = o.Softirq
	}
	return json.Marshal(toSerialize)
}

type NullableStatisticGetCpuDetailsResponse struct {
	value *StatisticGetCpuDetailsResponse
	isSet bool
}

func (v NullableStatisticGetCpuDetailsResponse) Get() *StatisticGetCpuDetailsResponse {
	return v.value
}

func (v *NullableStatisticGetCpuDetailsResponse) Set(val *StatisticGetCpuDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStatisticGetCpuDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStatisticGetCpuDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatisticGetCpuDetailsResponse(val *StatisticGetCpuDetailsResponse) *NullableStatisticGetCpuDetailsResponse {
	return &NullableStatisticGetCpuDetailsResponse{value: val, isSet: true}
}

func (v NullableStatisticGetCpuDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatisticGetCpuDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


