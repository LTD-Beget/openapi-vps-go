/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// ManageAttachIpAddressRequest struct for ManageAttachIpAddressRequest
type ManageAttachIpAddressRequest struct {
	Id *string `json:"id,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
}

// NewManageAttachIpAddressRequest instantiates a new ManageAttachIpAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageAttachIpAddressRequest() *ManageAttachIpAddressRequest {
	this := ManageAttachIpAddressRequest{}
	return &this
}

// NewManageAttachIpAddressRequestWithDefaults instantiates a new ManageAttachIpAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageAttachIpAddressRequestWithDefaults() *ManageAttachIpAddressRequest {
	this := ManageAttachIpAddressRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManageAttachIpAddressRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageAttachIpAddressRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManageAttachIpAddressRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManageAttachIpAddressRequest) SetId(v string) {
	o.Id = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ManageAttachIpAddressRequest) GetIpAddress() string {
	if o == nil || isNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageAttachIpAddressRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || isNil(o.IpAddress) {
    return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ManageAttachIpAddressRequest) HasIpAddress() bool {
	if o != nil && !isNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ManageAttachIpAddressRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o ManageAttachIpAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableManageAttachIpAddressRequest struct {
	value *ManageAttachIpAddressRequest
	isSet bool
}

func (v NullableManageAttachIpAddressRequest) Get() *ManageAttachIpAddressRequest {
	return v.value
}

func (v *NullableManageAttachIpAddressRequest) Set(val *ManageAttachIpAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManageAttachIpAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManageAttachIpAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageAttachIpAddressRequest(val *ManageAttachIpAddressRequest) *NullableManageAttachIpAddressRequest {
	return &NullableManageAttachIpAddressRequest{value: val, isSet: true}
}

func (v NullableManageAttachIpAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageAttachIpAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


