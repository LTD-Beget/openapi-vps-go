/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// MarketplaceSoftwareInfoRequirements struct for MarketplaceSoftwareInfoRequirements
type MarketplaceSoftwareInfoRequirements struct {
	CpuCount *int32 `json:"cpu_count,omitempty"`
	DiskSize *int32 `json:"disk_size,omitempty"`
	Memory *int32 `json:"memory,omitempty"`
}

// NewMarketplaceSoftwareInfoRequirements instantiates a new MarketplaceSoftwareInfoRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceSoftwareInfoRequirements() *MarketplaceSoftwareInfoRequirements {
	this := MarketplaceSoftwareInfoRequirements{}
	return &this
}

// NewMarketplaceSoftwareInfoRequirementsWithDefaults instantiates a new MarketplaceSoftwareInfoRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceSoftwareInfoRequirementsWithDefaults() *MarketplaceSoftwareInfoRequirements {
	this := MarketplaceSoftwareInfoRequirements{}
	return &this
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *MarketplaceSoftwareInfoRequirements) GetCpuCount() int32 {
	if o == nil || isNil(o.CpuCount) {
		var ret int32
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceSoftwareInfoRequirements) GetCpuCountOk() (*int32, bool) {
	if o == nil || isNil(o.CpuCount) {
    return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *MarketplaceSoftwareInfoRequirements) HasCpuCount() bool {
	if o != nil && !isNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int32 and assigns it to the CpuCount field.
func (o *MarketplaceSoftwareInfoRequirements) SetCpuCount(v int32) {
	o.CpuCount = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *MarketplaceSoftwareInfoRequirements) GetDiskSize() int32 {
	if o == nil || isNil(o.DiskSize) {
		var ret int32
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceSoftwareInfoRequirements) GetDiskSizeOk() (*int32, bool) {
	if o == nil || isNil(o.DiskSize) {
    return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *MarketplaceSoftwareInfoRequirements) HasDiskSize() bool {
	if o != nil && !isNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int32 and assigns it to the DiskSize field.
func (o *MarketplaceSoftwareInfoRequirements) SetDiskSize(v int32) {
	o.DiskSize = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *MarketplaceSoftwareInfoRequirements) GetMemory() int32 {
	if o == nil || isNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceSoftwareInfoRequirements) GetMemoryOk() (*int32, bool) {
	if o == nil || isNil(o.Memory) {
    return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *MarketplaceSoftwareInfoRequirements) HasMemory() bool {
	if o != nil && !isNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *MarketplaceSoftwareInfoRequirements) SetMemory(v int32) {
	o.Memory = &v
}

func (o MarketplaceSoftwareInfoRequirements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CpuCount) {
		toSerialize["cpu_count"] = o.CpuCount
	}
	if !isNil(o.DiskSize) {
		toSerialize["disk_size"] = o.DiskSize
	}
	if !isNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplaceSoftwareInfoRequirements struct {
	value *MarketplaceSoftwareInfoRequirements
	isSet bool
}

func (v NullableMarketplaceSoftwareInfoRequirements) Get() *MarketplaceSoftwareInfoRequirements {
	return v.value
}

func (v *NullableMarketplaceSoftwareInfoRequirements) Set(val *MarketplaceSoftwareInfoRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceSoftwareInfoRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceSoftwareInfoRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceSoftwareInfoRequirements(val *MarketplaceSoftwareInfoRequirements) *NullableMarketplaceSoftwareInfoRequirements {
	return &NullableMarketplaceSoftwareInfoRequirements{value: val, isSet: true}
}

func (v NullableMarketplaceSoftwareInfoRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceSoftwareInfoRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


