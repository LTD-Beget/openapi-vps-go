/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// MarketplaceDomainField struct for MarketplaceDomainField
type MarketplaceDomainField struct {
	Common *MarketplaceFieldCommon `json:"common,omitempty"`
	AllowTechDomain *bool `json:"allow_tech_domain,omitempty"`
}

// NewMarketplaceDomainField instantiates a new MarketplaceDomainField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceDomainField() *MarketplaceDomainField {
	this := MarketplaceDomainField{}
	return &this
}

// NewMarketplaceDomainFieldWithDefaults instantiates a new MarketplaceDomainField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceDomainFieldWithDefaults() *MarketplaceDomainField {
	this := MarketplaceDomainField{}
	return &this
}

// GetCommon returns the Common field value if set, zero value otherwise.
func (o *MarketplaceDomainField) GetCommon() MarketplaceFieldCommon {
	if o == nil || isNil(o.Common) {
		var ret MarketplaceFieldCommon
		return ret
	}
	return *o.Common
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceDomainField) GetCommonOk() (*MarketplaceFieldCommon, bool) {
	if o == nil || isNil(o.Common) {
    return nil, false
	}
	return o.Common, true
}

// HasCommon returns a boolean if a field has been set.
func (o *MarketplaceDomainField) HasCommon() bool {
	if o != nil && !isNil(o.Common) {
		return true
	}

	return false
}

// SetCommon gets a reference to the given MarketplaceFieldCommon and assigns it to the Common field.
func (o *MarketplaceDomainField) SetCommon(v MarketplaceFieldCommon) {
	o.Common = &v
}

// GetAllowTechDomain returns the AllowTechDomain field value if set, zero value otherwise.
func (o *MarketplaceDomainField) GetAllowTechDomain() bool {
	if o == nil || isNil(o.AllowTechDomain) {
		var ret bool
		return ret
	}
	return *o.AllowTechDomain
}

// GetAllowTechDomainOk returns a tuple with the AllowTechDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceDomainField) GetAllowTechDomainOk() (*bool, bool) {
	if o == nil || isNil(o.AllowTechDomain) {
    return nil, false
	}
	return o.AllowTechDomain, true
}

// HasAllowTechDomain returns a boolean if a field has been set.
func (o *MarketplaceDomainField) HasAllowTechDomain() bool {
	if o != nil && !isNil(o.AllowTechDomain) {
		return true
	}

	return false
}

// SetAllowTechDomain gets a reference to the given bool and assigns it to the AllowTechDomain field.
func (o *MarketplaceDomainField) SetAllowTechDomain(v bool) {
	o.AllowTechDomain = &v
}

func (o MarketplaceDomainField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Common) {
		toSerialize["common"] = o.Common
	}
	if !isNil(o.AllowTechDomain) {
		toSerialize["allow_tech_domain"] = o.AllowTechDomain
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplaceDomainField struct {
	value *MarketplaceDomainField
	isSet bool
}

func (v NullableMarketplaceDomainField) Get() *MarketplaceDomainField {
	return v.value
}

func (v *NullableMarketplaceDomainField) Set(val *MarketplaceDomainField) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceDomainField) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceDomainField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceDomainField(val *MarketplaceDomainField) *NullableMarketplaceDomainField {
	return &NullableMarketplaceDomainField{value: val, isSet: true}
}

func (v NullableMarketplaceDomainField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceDomainField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


