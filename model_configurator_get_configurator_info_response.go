/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// ConfiguratorGetConfiguratorInfoResponse struct for ConfiguratorGetConfiguratorInfoResponse
type ConfiguratorGetConfiguratorInfoResponse struct {
	Settings *ConfiguratorConfiguratorSettings `json:"settings,omitempty"`
	IsAvailable *bool `json:"is_available,omitempty"`
}

// NewConfiguratorGetConfiguratorInfoResponse instantiates a new ConfiguratorGetConfiguratorInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfiguratorGetConfiguratorInfoResponse() *ConfiguratorGetConfiguratorInfoResponse {
	this := ConfiguratorGetConfiguratorInfoResponse{}
	return &this
}

// NewConfiguratorGetConfiguratorInfoResponseWithDefaults instantiates a new ConfiguratorGetConfiguratorInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfiguratorGetConfiguratorInfoResponseWithDefaults() *ConfiguratorGetConfiguratorInfoResponse {
	this := ConfiguratorGetConfiguratorInfoResponse{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ConfiguratorGetConfiguratorInfoResponse) GetSettings() ConfiguratorConfiguratorSettings {
	if o == nil || isNil(o.Settings) {
		var ret ConfiguratorConfiguratorSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetConfiguratorInfoResponse) GetSettingsOk() (*ConfiguratorConfiguratorSettings, bool) {
	if o == nil || isNil(o.Settings) {
    return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ConfiguratorGetConfiguratorInfoResponse) HasSettings() bool {
	if o != nil && !isNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given ConfiguratorConfiguratorSettings and assigns it to the Settings field.
func (o *ConfiguratorGetConfiguratorInfoResponse) SetSettings(v ConfiguratorConfiguratorSettings) {
	o.Settings = &v
}

// GetIsAvailable returns the IsAvailable field value if set, zero value otherwise.
func (o *ConfiguratorGetConfiguratorInfoResponse) GetIsAvailable() bool {
	if o == nil || isNil(o.IsAvailable) {
		var ret bool
		return ret
	}
	return *o.IsAvailable
}

// GetIsAvailableOk returns a tuple with the IsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfiguratorGetConfiguratorInfoResponse) GetIsAvailableOk() (*bool, bool) {
	if o == nil || isNil(o.IsAvailable) {
    return nil, false
	}
	return o.IsAvailable, true
}

// HasIsAvailable returns a boolean if a field has been set.
func (o *ConfiguratorGetConfiguratorInfoResponse) HasIsAvailable() bool {
	if o != nil && !isNil(o.IsAvailable) {
		return true
	}

	return false
}

// SetIsAvailable gets a reference to the given bool and assigns it to the IsAvailable field.
func (o *ConfiguratorGetConfiguratorInfoResponse) SetIsAvailable(v bool) {
	o.IsAvailable = &v
}

func (o ConfiguratorGetConfiguratorInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !isNil(o.IsAvailable) {
		toSerialize["is_available"] = o.IsAvailable
	}
	return json.Marshal(toSerialize)
}

type NullableConfiguratorGetConfiguratorInfoResponse struct {
	value *ConfiguratorGetConfiguratorInfoResponse
	isSet bool
}

func (v NullableConfiguratorGetConfiguratorInfoResponse) Get() *ConfiguratorGetConfiguratorInfoResponse {
	return v.value
}

func (v *NullableConfiguratorGetConfiguratorInfoResponse) Set(val *ConfiguratorGetConfiguratorInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConfiguratorGetConfiguratorInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConfiguratorGetConfiguratorInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfiguratorGetConfiguratorInfoResponse(val *ConfiguratorGetConfiguratorInfoResponse) *NullableConfiguratorGetConfiguratorInfoResponse {
	return &NullableConfiguratorGetConfiguratorInfoResponse{value: val, isSet: true}
}

func (v NullableConfiguratorGetConfiguratorInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfiguratorGetConfiguratorInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


