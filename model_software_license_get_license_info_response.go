/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// SoftwareLicenseGetLicenseInfoResponse struct for SoftwareLicenseGetLicenseInfoResponse
type SoftwareLicenseGetLicenseInfoResponse struct {
	License *StructuresSoftwareLicense `json:"license,omitempty"`
}

// NewSoftwareLicenseGetLicenseInfoResponse instantiates a new SoftwareLicenseGetLicenseInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoftwareLicenseGetLicenseInfoResponse() *SoftwareLicenseGetLicenseInfoResponse {
	this := SoftwareLicenseGetLicenseInfoResponse{}
	return &this
}

// NewSoftwareLicenseGetLicenseInfoResponseWithDefaults instantiates a new SoftwareLicenseGetLicenseInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoftwareLicenseGetLicenseInfoResponseWithDefaults() *SoftwareLicenseGetLicenseInfoResponse {
	this := SoftwareLicenseGetLicenseInfoResponse{}
	return &this
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *SoftwareLicenseGetLicenseInfoResponse) GetLicense() StructuresSoftwareLicense {
	if o == nil || isNil(o.License) {
		var ret StructuresSoftwareLicense
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SoftwareLicenseGetLicenseInfoResponse) GetLicenseOk() (*StructuresSoftwareLicense, bool) {
	if o == nil || isNil(o.License) {
    return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *SoftwareLicenseGetLicenseInfoResponse) HasLicense() bool {
	if o != nil && !isNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given StructuresSoftwareLicense and assigns it to the License field.
func (o *SoftwareLicenseGetLicenseInfoResponse) SetLicense(v StructuresSoftwareLicense) {
	o.License = &v
}

func (o SoftwareLicenseGetLicenseInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.License) {
		toSerialize["license"] = o.License
	}
	return json.Marshal(toSerialize)
}

type NullableSoftwareLicenseGetLicenseInfoResponse struct {
	value *SoftwareLicenseGetLicenseInfoResponse
	isSet bool
}

func (v NullableSoftwareLicenseGetLicenseInfoResponse) Get() *SoftwareLicenseGetLicenseInfoResponse {
	return v.value
}

func (v *NullableSoftwareLicenseGetLicenseInfoResponse) Set(val *SoftwareLicenseGetLicenseInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSoftwareLicenseGetLicenseInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSoftwareLicenseGetLicenseInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoftwareLicenseGetLicenseInfoResponse(val *SoftwareLicenseGetLicenseInfoResponse) *NullableSoftwareLicenseGetLicenseInfoResponse {
	return &NullableSoftwareLicenseGetLicenseInfoResponse{value: val, isSet: true}
}

func (v NullableSoftwareLicenseGetLicenseInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoftwareLicenseGetLicenseInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


