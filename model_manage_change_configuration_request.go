/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// ManageChangeConfigurationRequest struct for ManageChangeConfigurationRequest
type ManageChangeConfigurationRequest struct {
	Id *string `json:"id,omitempty"`
	ConfigurationId *string `json:"configuration_id,omitempty"`
	ConfigurationParams *StructuresConfigurationParams `json:"configuration_params,omitempty"`
}

// NewManageChangeConfigurationRequest instantiates a new ManageChangeConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageChangeConfigurationRequest() *ManageChangeConfigurationRequest {
	this := ManageChangeConfigurationRequest{}
	return &this
}

// NewManageChangeConfigurationRequestWithDefaults instantiates a new ManageChangeConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageChangeConfigurationRequestWithDefaults() *ManageChangeConfigurationRequest {
	this := ManageChangeConfigurationRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManageChangeConfigurationRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageChangeConfigurationRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManageChangeConfigurationRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManageChangeConfigurationRequest) SetId(v string) {
	o.Id = &v
}

// GetConfigurationId returns the ConfigurationId field value if set, zero value otherwise.
func (o *ManageChangeConfigurationRequest) GetConfigurationId() string {
	if o == nil || isNil(o.ConfigurationId) {
		var ret string
		return ret
	}
	return *o.ConfigurationId
}

// GetConfigurationIdOk returns a tuple with the ConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageChangeConfigurationRequest) GetConfigurationIdOk() (*string, bool) {
	if o == nil || isNil(o.ConfigurationId) {
    return nil, false
	}
	return o.ConfigurationId, true
}

// HasConfigurationId returns a boolean if a field has been set.
func (o *ManageChangeConfigurationRequest) HasConfigurationId() bool {
	if o != nil && !isNil(o.ConfigurationId) {
		return true
	}

	return false
}

// SetConfigurationId gets a reference to the given string and assigns it to the ConfigurationId field.
func (o *ManageChangeConfigurationRequest) SetConfigurationId(v string) {
	o.ConfigurationId = &v
}

// GetConfigurationParams returns the ConfigurationParams field value if set, zero value otherwise.
func (o *ManageChangeConfigurationRequest) GetConfigurationParams() StructuresConfigurationParams {
	if o == nil || isNil(o.ConfigurationParams) {
		var ret StructuresConfigurationParams
		return ret
	}
	return *o.ConfigurationParams
}

// GetConfigurationParamsOk returns a tuple with the ConfigurationParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageChangeConfigurationRequest) GetConfigurationParamsOk() (*StructuresConfigurationParams, bool) {
	if o == nil || isNil(o.ConfigurationParams) {
    return nil, false
	}
	return o.ConfigurationParams, true
}

// HasConfigurationParams returns a boolean if a field has been set.
func (o *ManageChangeConfigurationRequest) HasConfigurationParams() bool {
	if o != nil && !isNil(o.ConfigurationParams) {
		return true
	}

	return false
}

// SetConfigurationParams gets a reference to the given StructuresConfigurationParams and assigns it to the ConfigurationParams field.
func (o *ManageChangeConfigurationRequest) SetConfigurationParams(v StructuresConfigurationParams) {
	o.ConfigurationParams = &v
}

func (o ManageChangeConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ConfigurationId) {
		toSerialize["configuration_id"] = o.ConfigurationId
	}
	if !isNil(o.ConfigurationParams) {
		toSerialize["configuration_params"] = o.ConfigurationParams
	}
	return json.Marshal(toSerialize)
}

type NullableManageChangeConfigurationRequest struct {
	value *ManageChangeConfigurationRequest
	isSet bool
}

func (v NullableManageChangeConfigurationRequest) Get() *ManageChangeConfigurationRequest {
	return v.value
}

func (v *NullableManageChangeConfigurationRequest) Set(val *ManageChangeConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManageChangeConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManageChangeConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageChangeConfigurationRequest(val *ManageChangeConfigurationRequest) *NullableManageChangeConfigurationRequest {
	return &NullableManageChangeConfigurationRequest{value: val, isSet: true}
}

func (v NullableManageChangeConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageChangeConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


