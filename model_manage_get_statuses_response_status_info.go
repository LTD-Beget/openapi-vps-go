/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// ManageGetStatusesResponseStatusInfo struct for ManageGetStatusesResponseStatusInfo
type ManageGetStatusesResponseStatusInfo struct {
	Id *string `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	RescueMode *bool `json:"rescue_mode,omitempty"`
	Migrating *bool `json:"migrating,omitempty"`
	ManageEnabled *bool `json:"manage_enabled,omitempty"`
	Restoring *bool `json:"restoring,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	Unblocking *bool `json:"unblocking,omitempty"`
	Unarchiving *bool `json:"unarchiving,omitempty"`
}

// NewManageGetStatusesResponseStatusInfo instantiates a new ManageGetStatusesResponseStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageGetStatusesResponseStatusInfo() *ManageGetStatusesResponseStatusInfo {
	this := ManageGetStatusesResponseStatusInfo{}
	return &this
}

// NewManageGetStatusesResponseStatusInfoWithDefaults instantiates a new ManageGetStatusesResponseStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageGetStatusesResponseStatusInfoWithDefaults() *ManageGetStatusesResponseStatusInfo {
	this := ManageGetStatusesResponseStatusInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManageGetStatusesResponseStatusInfo) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ManageGetStatusesResponseStatusInfo) SetStatus(v string) {
	o.Status = &v
}

// GetRescueMode returns the RescueMode field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetRescueMode() bool {
	if o == nil || isNil(o.RescueMode) {
		var ret bool
		return ret
	}
	return *o.RescueMode
}

// GetRescueModeOk returns a tuple with the RescueMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetRescueModeOk() (*bool, bool) {
	if o == nil || isNil(o.RescueMode) {
    return nil, false
	}
	return o.RescueMode, true
}

// HasRescueMode returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasRescueMode() bool {
	if o != nil && !isNil(o.RescueMode) {
		return true
	}

	return false
}

// SetRescueMode gets a reference to the given bool and assigns it to the RescueMode field.
func (o *ManageGetStatusesResponseStatusInfo) SetRescueMode(v bool) {
	o.RescueMode = &v
}

// GetMigrating returns the Migrating field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetMigrating() bool {
	if o == nil || isNil(o.Migrating) {
		var ret bool
		return ret
	}
	return *o.Migrating
}

// GetMigratingOk returns a tuple with the Migrating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetMigratingOk() (*bool, bool) {
	if o == nil || isNil(o.Migrating) {
    return nil, false
	}
	return o.Migrating, true
}

// HasMigrating returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasMigrating() bool {
	if o != nil && !isNil(o.Migrating) {
		return true
	}

	return false
}

// SetMigrating gets a reference to the given bool and assigns it to the Migrating field.
func (o *ManageGetStatusesResponseStatusInfo) SetMigrating(v bool) {
	o.Migrating = &v
}

// GetManageEnabled returns the ManageEnabled field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetManageEnabled() bool {
	if o == nil || isNil(o.ManageEnabled) {
		var ret bool
		return ret
	}
	return *o.ManageEnabled
}

// GetManageEnabledOk returns a tuple with the ManageEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetManageEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ManageEnabled) {
    return nil, false
	}
	return o.ManageEnabled, true
}

// HasManageEnabled returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasManageEnabled() bool {
	if o != nil && !isNil(o.ManageEnabled) {
		return true
	}

	return false
}

// SetManageEnabled gets a reference to the given bool and assigns it to the ManageEnabled field.
func (o *ManageGetStatusesResponseStatusInfo) SetManageEnabled(v bool) {
	o.ManageEnabled = &v
}

// GetRestoring returns the Restoring field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetRestoring() bool {
	if o == nil || isNil(o.Restoring) {
		var ret bool
		return ret
	}
	return *o.Restoring
}

// GetRestoringOk returns a tuple with the Restoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetRestoringOk() (*bool, bool) {
	if o == nil || isNil(o.Restoring) {
    return nil, false
	}
	return o.Restoring, true
}

// HasRestoring returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasRestoring() bool {
	if o != nil && !isNil(o.Restoring) {
		return true
	}

	return false
}

// SetRestoring gets a reference to the given bool and assigns it to the Restoring field.
func (o *ManageGetStatusesResponseStatusInfo) SetRestoring(v bool) {
	o.Restoring = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetArchived() bool {
	if o == nil || isNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetArchivedOk() (*bool, bool) {
	if o == nil || isNil(o.Archived) {
    return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasArchived() bool {
	if o != nil && !isNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *ManageGetStatusesResponseStatusInfo) SetArchived(v bool) {
	o.Archived = &v
}

// GetUnblocking returns the Unblocking field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetUnblocking() bool {
	if o == nil || isNil(o.Unblocking) {
		var ret bool
		return ret
	}
	return *o.Unblocking
}

// GetUnblockingOk returns a tuple with the Unblocking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetUnblockingOk() (*bool, bool) {
	if o == nil || isNil(o.Unblocking) {
    return nil, false
	}
	return o.Unblocking, true
}

// HasUnblocking returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasUnblocking() bool {
	if o != nil && !isNil(o.Unblocking) {
		return true
	}

	return false
}

// SetUnblocking gets a reference to the given bool and assigns it to the Unblocking field.
func (o *ManageGetStatusesResponseStatusInfo) SetUnblocking(v bool) {
	o.Unblocking = &v
}

// GetUnarchiving returns the Unarchiving field value if set, zero value otherwise.
func (o *ManageGetStatusesResponseStatusInfo) GetUnarchiving() bool {
	if o == nil || isNil(o.Unarchiving) {
		var ret bool
		return ret
	}
	return *o.Unarchiving
}

// GetUnarchivingOk returns a tuple with the Unarchiving field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageGetStatusesResponseStatusInfo) GetUnarchivingOk() (*bool, bool) {
	if o == nil || isNil(o.Unarchiving) {
    return nil, false
	}
	return o.Unarchiving, true
}

// HasUnarchiving returns a boolean if a field has been set.
func (o *ManageGetStatusesResponseStatusInfo) HasUnarchiving() bool {
	if o != nil && !isNil(o.Unarchiving) {
		return true
	}

	return false
}

// SetUnarchiving gets a reference to the given bool and assigns it to the Unarchiving field.
func (o *ManageGetStatusesResponseStatusInfo) SetUnarchiving(v bool) {
	o.Unarchiving = &v
}

func (o ManageGetStatusesResponseStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.RescueMode) {
		toSerialize["rescue_mode"] = o.RescueMode
	}
	if !isNil(o.Migrating) {
		toSerialize["migrating"] = o.Migrating
	}
	if !isNil(o.ManageEnabled) {
		toSerialize["manage_enabled"] = o.ManageEnabled
	}
	if !isNil(o.Restoring) {
		toSerialize["restoring"] = o.Restoring
	}
	if !isNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !isNil(o.Unblocking) {
		toSerialize["unblocking"] = o.Unblocking
	}
	if !isNil(o.Unarchiving) {
		toSerialize["unarchiving"] = o.Unarchiving
	}
	return json.Marshal(toSerialize)
}

type NullableManageGetStatusesResponseStatusInfo struct {
	value *ManageGetStatusesResponseStatusInfo
	isSet bool
}

func (v NullableManageGetStatusesResponseStatusInfo) Get() *ManageGetStatusesResponseStatusInfo {
	return v.value
}

func (v *NullableManageGetStatusesResponseStatusInfo) Set(val *ManageGetStatusesResponseStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableManageGetStatusesResponseStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableManageGetStatusesResponseStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageGetStatusesResponseStatusInfo(val *ManageGetStatusesResponseStatusInfo) *NullableManageGetStatusesResponseStatusInfo {
	return &NullableManageGetStatusesResponseStatusInfo{value: val, isSet: true}
}

func (v NullableManageGetStatusesResponseStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageGetStatusesResponseStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


