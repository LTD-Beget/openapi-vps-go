/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StructuresInstalledSoftwareInfoFieldValue struct for StructuresInstalledSoftwareInfoFieldValue
type StructuresInstalledSoftwareInfoFieldValue struct {
	LabelRu *string `json:"label_ru,omitempty"`
	LabelEn *string `json:"label_en,omitempty"`
	Value *string `json:"value,omitempty"`
	Type *string `json:"type,omitempty"`
	Variable *string `json:"variable,omitempty"`
}

// NewStructuresInstalledSoftwareInfoFieldValue instantiates a new StructuresInstalledSoftwareInfoFieldValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresInstalledSoftwareInfoFieldValue() *StructuresInstalledSoftwareInfoFieldValue {
	this := StructuresInstalledSoftwareInfoFieldValue{}
	return &this
}

// NewStructuresInstalledSoftwareInfoFieldValueWithDefaults instantiates a new StructuresInstalledSoftwareInfoFieldValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresInstalledSoftwareInfoFieldValueWithDefaults() *StructuresInstalledSoftwareInfoFieldValue {
	this := StructuresInstalledSoftwareInfoFieldValue{}
	return &this
}

// GetLabelRu returns the LabelRu field value if set, zero value otherwise.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetLabelRu() string {
	if o == nil || isNil(o.LabelRu) {
		var ret string
		return ret
	}
	return *o.LabelRu
}

// GetLabelRuOk returns a tuple with the LabelRu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetLabelRuOk() (*string, bool) {
	if o == nil || isNil(o.LabelRu) {
    return nil, false
	}
	return o.LabelRu, true
}

// HasLabelRu returns a boolean if a field has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) HasLabelRu() bool {
	if o != nil && !isNil(o.LabelRu) {
		return true
	}

	return false
}

// SetLabelRu gets a reference to the given string and assigns it to the LabelRu field.
func (o *StructuresInstalledSoftwareInfoFieldValue) SetLabelRu(v string) {
	o.LabelRu = &v
}

// GetLabelEn returns the LabelEn field value if set, zero value otherwise.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetLabelEn() string {
	if o == nil || isNil(o.LabelEn) {
		var ret string
		return ret
	}
	return *o.LabelEn
}

// GetLabelEnOk returns a tuple with the LabelEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetLabelEnOk() (*string, bool) {
	if o == nil || isNil(o.LabelEn) {
    return nil, false
	}
	return o.LabelEn, true
}

// HasLabelEn returns a boolean if a field has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) HasLabelEn() bool {
	if o != nil && !isNil(o.LabelEn) {
		return true
	}

	return false
}

// SetLabelEn gets a reference to the given string and assigns it to the LabelEn field.
func (o *StructuresInstalledSoftwareInfoFieldValue) SetLabelEn(v string) {
	o.LabelEn = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *StructuresInstalledSoftwareInfoFieldValue) SetValue(v string) {
	o.Value = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StructuresInstalledSoftwareInfoFieldValue) SetType(v string) {
	o.Type = &v
}

// GetVariable returns the Variable field value if set, zero value otherwise.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetVariable() string {
	if o == nil || isNil(o.Variable) {
		var ret string
		return ret
	}
	return *o.Variable
}

// GetVariableOk returns a tuple with the Variable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) GetVariableOk() (*string, bool) {
	if o == nil || isNil(o.Variable) {
    return nil, false
	}
	return o.Variable, true
}

// HasVariable returns a boolean if a field has been set.
func (o *StructuresInstalledSoftwareInfoFieldValue) HasVariable() bool {
	if o != nil && !isNil(o.Variable) {
		return true
	}

	return false
}

// SetVariable gets a reference to the given string and assigns it to the Variable field.
func (o *StructuresInstalledSoftwareInfoFieldValue) SetVariable(v string) {
	o.Variable = &v
}

func (o StructuresInstalledSoftwareInfoFieldValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LabelRu) {
		toSerialize["label_ru"] = o.LabelRu
	}
	if !isNil(o.LabelEn) {
		toSerialize["label_en"] = o.LabelEn
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Variable) {
		toSerialize["variable"] = o.Variable
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresInstalledSoftwareInfoFieldValue struct {
	value *StructuresInstalledSoftwareInfoFieldValue
	isSet bool
}

func (v NullableStructuresInstalledSoftwareInfoFieldValue) Get() *StructuresInstalledSoftwareInfoFieldValue {
	return v.value
}

func (v *NullableStructuresInstalledSoftwareInfoFieldValue) Set(val *StructuresInstalledSoftwareInfoFieldValue) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresInstalledSoftwareInfoFieldValue) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresInstalledSoftwareInfoFieldValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresInstalledSoftwareInfoFieldValue(val *StructuresInstalledSoftwareInfoFieldValue) *NullableStructuresInstalledSoftwareInfoFieldValue {
	return &NullableStructuresInstalledSoftwareInfoFieldValue{value: val, isSet: true}
}

func (v NullableStructuresInstalledSoftwareInfoFieldValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresInstalledSoftwareInfoFieldValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


