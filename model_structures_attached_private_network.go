/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StructuresAttachedPrivateNetwork struct for StructuresAttachedPrivateNetwork
type StructuresAttachedPrivateNetwork struct {
	Network *StructuresPrivateNetwork `json:"network,omitempty"`
	Ip []string `json:"ip,omitempty"`
}

// NewStructuresAttachedPrivateNetwork instantiates a new StructuresAttachedPrivateNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresAttachedPrivateNetwork() *StructuresAttachedPrivateNetwork {
	this := StructuresAttachedPrivateNetwork{}
	return &this
}

// NewStructuresAttachedPrivateNetworkWithDefaults instantiates a new StructuresAttachedPrivateNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresAttachedPrivateNetworkWithDefaults() *StructuresAttachedPrivateNetwork {
	this := StructuresAttachedPrivateNetwork{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *StructuresAttachedPrivateNetwork) GetNetwork() StructuresPrivateNetwork {
	if o == nil || isNil(o.Network) {
		var ret StructuresPrivateNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresAttachedPrivateNetwork) GetNetworkOk() (*StructuresPrivateNetwork, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *StructuresAttachedPrivateNetwork) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given StructuresPrivateNetwork and assigns it to the Network field.
func (o *StructuresAttachedPrivateNetwork) SetNetwork(v StructuresPrivateNetwork) {
	o.Network = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *StructuresAttachedPrivateNetwork) GetIp() []string {
	if o == nil || isNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresAttachedPrivateNetwork) GetIpOk() ([]string, bool) {
	if o == nil || isNil(o.Ip) {
    return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *StructuresAttachedPrivateNetwork) HasIp() bool {
	if o != nil && !isNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *StructuresAttachedPrivateNetwork) SetIp(v []string) {
	o.Ip = v
}

func (o StructuresAttachedPrivateNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresAttachedPrivateNetwork struct {
	value *StructuresAttachedPrivateNetwork
	isSet bool
}

func (v NullableStructuresAttachedPrivateNetwork) Get() *StructuresAttachedPrivateNetwork {
	return v.value
}

func (v *NullableStructuresAttachedPrivateNetwork) Set(val *StructuresAttachedPrivateNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresAttachedPrivateNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresAttachedPrivateNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresAttachedPrivateNetwork(val *StructuresAttachedPrivateNetwork) *NullableStructuresAttachedPrivateNetwork {
	return &NullableStructuresAttachedPrivateNetwork{value: val, isSet: true}
}

func (v NullableStructuresAttachedPrivateNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresAttachedPrivateNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


