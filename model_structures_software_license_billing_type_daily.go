/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StructuresSoftwareLicenseBillingTypeDaily struct for StructuresSoftwareLicenseBillingTypeDaily
type StructuresSoftwareLicenseBillingTypeDaily struct {
	PriceDay *float64 `json:"price_day,omitempty"`
	PriceMonth *int32 `json:"price_month,omitempty"`
}

// NewStructuresSoftwareLicenseBillingTypeDaily instantiates a new StructuresSoftwareLicenseBillingTypeDaily object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresSoftwareLicenseBillingTypeDaily() *StructuresSoftwareLicenseBillingTypeDaily {
	this := StructuresSoftwareLicenseBillingTypeDaily{}
	return &this
}

// NewStructuresSoftwareLicenseBillingTypeDailyWithDefaults instantiates a new StructuresSoftwareLicenseBillingTypeDaily object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresSoftwareLicenseBillingTypeDailyWithDefaults() *StructuresSoftwareLicenseBillingTypeDaily {
	this := StructuresSoftwareLicenseBillingTypeDaily{}
	return &this
}

// GetPriceDay returns the PriceDay field value if set, zero value otherwise.
func (o *StructuresSoftwareLicenseBillingTypeDaily) GetPriceDay() float64 {
	if o == nil || isNil(o.PriceDay) {
		var ret float64
		return ret
	}
	return *o.PriceDay
}

// GetPriceDayOk returns a tuple with the PriceDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresSoftwareLicenseBillingTypeDaily) GetPriceDayOk() (*float64, bool) {
	if o == nil || isNil(o.PriceDay) {
    return nil, false
	}
	return o.PriceDay, true
}

// HasPriceDay returns a boolean if a field has been set.
func (o *StructuresSoftwareLicenseBillingTypeDaily) HasPriceDay() bool {
	if o != nil && !isNil(o.PriceDay) {
		return true
	}

	return false
}

// SetPriceDay gets a reference to the given float64 and assigns it to the PriceDay field.
func (o *StructuresSoftwareLicenseBillingTypeDaily) SetPriceDay(v float64) {
	o.PriceDay = &v
}

// GetPriceMonth returns the PriceMonth field value if set, zero value otherwise.
func (o *StructuresSoftwareLicenseBillingTypeDaily) GetPriceMonth() int32 {
	if o == nil || isNil(o.PriceMonth) {
		var ret int32
		return ret
	}
	return *o.PriceMonth
}

// GetPriceMonthOk returns a tuple with the PriceMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresSoftwareLicenseBillingTypeDaily) GetPriceMonthOk() (*int32, bool) {
	if o == nil || isNil(o.PriceMonth) {
    return nil, false
	}
	return o.PriceMonth, true
}

// HasPriceMonth returns a boolean if a field has been set.
func (o *StructuresSoftwareLicenseBillingTypeDaily) HasPriceMonth() bool {
	if o != nil && !isNil(o.PriceMonth) {
		return true
	}

	return false
}

// SetPriceMonth gets a reference to the given int32 and assigns it to the PriceMonth field.
func (o *StructuresSoftwareLicenseBillingTypeDaily) SetPriceMonth(v int32) {
	o.PriceMonth = &v
}

func (o StructuresSoftwareLicenseBillingTypeDaily) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PriceDay) {
		toSerialize["price_day"] = o.PriceDay
	}
	if !isNil(o.PriceMonth) {
		toSerialize["price_month"] = o.PriceMonth
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresSoftwareLicenseBillingTypeDaily struct {
	value *StructuresSoftwareLicenseBillingTypeDaily
	isSet bool
}

func (v NullableStructuresSoftwareLicenseBillingTypeDaily) Get() *StructuresSoftwareLicenseBillingTypeDaily {
	return v.value
}

func (v *NullableStructuresSoftwareLicenseBillingTypeDaily) Set(val *StructuresSoftwareLicenseBillingTypeDaily) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresSoftwareLicenseBillingTypeDaily) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresSoftwareLicenseBillingTypeDaily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresSoftwareLicenseBillingTypeDaily(val *StructuresSoftwareLicenseBillingTypeDaily) *NullableStructuresSoftwareLicenseBillingTypeDaily {
	return &NullableStructuresSoftwareLicenseBillingTypeDaily{value: val, isSet: true}
}

func (v NullableStructuresSoftwareLicenseBillingTypeDaily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresSoftwareLicenseBillingTypeDaily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


