/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// StructuresSoftwareLicenseBillingType struct for StructuresSoftwareLicenseBillingType
type StructuresSoftwareLicenseBillingType struct {
	Daily *StructuresSoftwareLicenseBillingTypeDaily `json:"daily,omitempty"`
	Monthly *StructuresSoftwareLicenseBillingTypeMonthly `json:"monthly,omitempty"`
}

// NewStructuresSoftwareLicenseBillingType instantiates a new StructuresSoftwareLicenseBillingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuresSoftwareLicenseBillingType() *StructuresSoftwareLicenseBillingType {
	this := StructuresSoftwareLicenseBillingType{}
	return &this
}

// NewStructuresSoftwareLicenseBillingTypeWithDefaults instantiates a new StructuresSoftwareLicenseBillingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuresSoftwareLicenseBillingTypeWithDefaults() *StructuresSoftwareLicenseBillingType {
	this := StructuresSoftwareLicenseBillingType{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *StructuresSoftwareLicenseBillingType) GetDaily() StructuresSoftwareLicenseBillingTypeDaily {
	if o == nil || isNil(o.Daily) {
		var ret StructuresSoftwareLicenseBillingTypeDaily
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresSoftwareLicenseBillingType) GetDailyOk() (*StructuresSoftwareLicenseBillingTypeDaily, bool) {
	if o == nil || isNil(o.Daily) {
    return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *StructuresSoftwareLicenseBillingType) HasDaily() bool {
	if o != nil && !isNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given StructuresSoftwareLicenseBillingTypeDaily and assigns it to the Daily field.
func (o *StructuresSoftwareLicenseBillingType) SetDaily(v StructuresSoftwareLicenseBillingTypeDaily) {
	o.Daily = &v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *StructuresSoftwareLicenseBillingType) GetMonthly() StructuresSoftwareLicenseBillingTypeMonthly {
	if o == nil || isNil(o.Monthly) {
		var ret StructuresSoftwareLicenseBillingTypeMonthly
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuresSoftwareLicenseBillingType) GetMonthlyOk() (*StructuresSoftwareLicenseBillingTypeMonthly, bool) {
	if o == nil || isNil(o.Monthly) {
    return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *StructuresSoftwareLicenseBillingType) HasMonthly() bool {
	if o != nil && !isNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given StructuresSoftwareLicenseBillingTypeMonthly and assigns it to the Monthly field.
func (o *StructuresSoftwareLicenseBillingType) SetMonthly(v StructuresSoftwareLicenseBillingTypeMonthly) {
	o.Monthly = &v
}

func (o StructuresSoftwareLicenseBillingType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !isNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}
	return json.Marshal(toSerialize)
}

type NullableStructuresSoftwareLicenseBillingType struct {
	value *StructuresSoftwareLicenseBillingType
	isSet bool
}

func (v NullableStructuresSoftwareLicenseBillingType) Get() *StructuresSoftwareLicenseBillingType {
	return v.value
}

func (v *NullableStructuresSoftwareLicenseBillingType) Set(val *StructuresSoftwareLicenseBillingType) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuresSoftwareLicenseBillingType) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuresSoftwareLicenseBillingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuresSoftwareLicenseBillingType(val *StructuresSoftwareLicenseBillingType) *NullableStructuresSoftwareLicenseBillingType {
	return &NullableStructuresSoftwareLicenseBillingType{value: val, isSet: true}
}

func (v NullableStructuresSoftwareLicenseBillingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuresSoftwareLicenseBillingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


