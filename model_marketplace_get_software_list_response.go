/*
API Облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.6.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps

import (
	"encoding/json"
)

// MarketplaceGetSoftwareListResponse struct for MarketplaceGetSoftwareListResponse
type MarketplaceGetSoftwareListResponse struct {
	Software []MarketplaceSoftwareInfo `json:"software,omitempty"`
}

// NewMarketplaceGetSoftwareListResponse instantiates a new MarketplaceGetSoftwareListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplaceGetSoftwareListResponse() *MarketplaceGetSoftwareListResponse {
	this := MarketplaceGetSoftwareListResponse{}
	return &this
}

// NewMarketplaceGetSoftwareListResponseWithDefaults instantiates a new MarketplaceGetSoftwareListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplaceGetSoftwareListResponseWithDefaults() *MarketplaceGetSoftwareListResponse {
	this := MarketplaceGetSoftwareListResponse{}
	return &this
}

// GetSoftware returns the Software field value if set, zero value otherwise.
func (o *MarketplaceGetSoftwareListResponse) GetSoftware() []MarketplaceSoftwareInfo {
	if o == nil || isNil(o.Software) {
		var ret []MarketplaceSoftwareInfo
		return ret
	}
	return o.Software
}

// GetSoftwareOk returns a tuple with the Software field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplaceGetSoftwareListResponse) GetSoftwareOk() ([]MarketplaceSoftwareInfo, bool) {
	if o == nil || isNil(o.Software) {
    return nil, false
	}
	return o.Software, true
}

// HasSoftware returns a boolean if a field has been set.
func (o *MarketplaceGetSoftwareListResponse) HasSoftware() bool {
	if o != nil && !isNil(o.Software) {
		return true
	}

	return false
}

// SetSoftware gets a reference to the given []MarketplaceSoftwareInfo and assigns it to the Software field.
func (o *MarketplaceGetSoftwareListResponse) SetSoftware(v []MarketplaceSoftwareInfo) {
	o.Software = v
}

func (o MarketplaceGetSoftwareListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Software) {
		toSerialize["software"] = o.Software
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplaceGetSoftwareListResponse struct {
	value *MarketplaceGetSoftwareListResponse
	isSet bool
}

func (v NullableMarketplaceGetSoftwareListResponse) Get() *MarketplaceGetSoftwareListResponse {
	return v.value
}

func (v *NullableMarketplaceGetSoftwareListResponse) Set(val *MarketplaceGetSoftwareListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceGetSoftwareListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceGetSoftwareListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceGetSoftwareListResponse(val *MarketplaceGetSoftwareListResponse) *NullableMarketplaceGetSoftwareListResponse {
	return &NullableMarketplaceGetSoftwareListResponse{value: val, isSet: true}
}

func (v NullableMarketplaceGetSoftwareListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceGetSoftwareListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


